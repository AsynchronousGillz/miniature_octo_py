# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: miniature/miniature.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='miniature/miniature.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x19miniature/miniature.proto\"\x1f\n\x0c\x43hunkRequest\x12\x0f\n\x07maxSize\x18\x01 \x01(\r\"J\n\nChunkReply\x12\x10\n\x08\x66ileName\x18\x01 \x01(\t\x12\x0e\n\x06offset\x18\x02 \x01(\x03\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c\x12\x0c\n\x04hash\x18\x04 \x01(\t29\n\tMiniature\x12,\n\x0cRequestChunk\x12\r.ChunkRequest\x1a\x0b.ChunkReply\"\x00\x62\x06proto3'
)




_CHUNKREQUEST = _descriptor.Descriptor(
  name='ChunkRequest',
  full_name='ChunkRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='maxSize', full_name='ChunkRequest.maxSize', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=29,
  serialized_end=60,
)


_CHUNKREPLY = _descriptor.Descriptor(
  name='ChunkReply',
  full_name='ChunkReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='fileName', full_name='ChunkReply.fileName', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='ChunkReply.offset', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data', full_name='ChunkReply.data', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hash', full_name='ChunkReply.hash', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=136,
)

DESCRIPTOR.message_types_by_name['ChunkRequest'] = _CHUNKREQUEST
DESCRIPTOR.message_types_by_name['ChunkReply'] = _CHUNKREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ChunkRequest = _reflection.GeneratedProtocolMessageType('ChunkRequest', (_message.Message,), {
  'DESCRIPTOR' : _CHUNKREQUEST,
  '__module__' : 'miniature.miniature_pb2'
  # @@protoc_insertion_point(class_scope:ChunkRequest)
  })
_sym_db.RegisterMessage(ChunkRequest)

ChunkReply = _reflection.GeneratedProtocolMessageType('ChunkReply', (_message.Message,), {
  'DESCRIPTOR' : _CHUNKREPLY,
  '__module__' : 'miniature.miniature_pb2'
  # @@protoc_insertion_point(class_scope:ChunkReply)
  })
_sym_db.RegisterMessage(ChunkReply)



_MINIATURE = _descriptor.ServiceDescriptor(
  name='Miniature',
  full_name='Miniature',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=138,
  serialized_end=195,
  methods=[
  _descriptor.MethodDescriptor(
    name='RequestChunk',
    full_name='Miniature.RequestChunk',
    index=0,
    containing_service=None,
    input_type=_CHUNKREQUEST,
    output_type=_CHUNKREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_MINIATURE)

DESCRIPTOR.services_by_name['Miniature'] = _MINIATURE

# @@protoc_insertion_point(module_scope)
